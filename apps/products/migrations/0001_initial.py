# Generated by Django 5.2.5 on 2025-08-25 14:43

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=500, unique=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'ordering': ['-name'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=500, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=500)),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=50, validators=[django.core.validators.MinValueValidator(0)])),
                ('stock_quantity', models.PositiveIntegerField()),
                ('low_stock_threshold', models.PositiveIntegerField(default=10, help_text='What quantity will the stock get to before it is considered too low and an alart can be raised')),
                ('purchase_count', models.PositiveIntegerField(default=0, help_text='keep a count of how many times this product has been successfully purchased')),
                ('min_order_quantity', models.PositiveIntegerField(default=1, help_text='The min quantity a customer can buy in a single purchse. Defaults to 1')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('archived', 'Archived')], default='active', help_text='Indicate if the product is active, or saved as draft or archived', max_length=10)),
                ('type', models.CharField(choices=[('digital', 'Digital product'), ('physical', 'Physical product'), ('service', 'Service')], default='physical', help_text='Identify if the product being listed is a physical or digital (downloadable) product or a service', max_length=10)),
                ('allow_backorder', models.BooleanField(default=False, help_text='Allow customers to keep placing order on a product after the available stock has finished. For digital product, make this true if you want customer to purchase/download the digital product regardless of stock quantity.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('categories', models.ManyToManyField(related_name='products', to='products.category')),
                ('tags', models.ManyToManyField(related_name='products', to='products.tag')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('image_url', models.URLField(unique=True)),
                ('alt_text', models.TextField(blank=True)),
                ('position', models.PositiveIntegerField(default=1, help_text='Identify the order which the product images will be displayed using numbers to repr first, second, etc. The first will be the cover image.', unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='products.product')),
            ],
            options={
                'verbose_name': 'Image',
                'verbose_name_plural': 'Images',
                'ordering': ['-position'],
            },
        ),
    ]
